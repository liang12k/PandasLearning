# debug module
>>> run -d _module_name_.py
...
>>> s # lower case 's' and hit enter to step thru the %pdb debugger, into func call

# debug module w set breakpoints
>>> run -d -b_#_ _module_name_.py # replace _#_ w a line number, preset for debugging

# stepping thru debugger
>>> s # step into func call
>>>
>>> c # continue until debug pt, end
>>>
>>> n # next line
>>>
>>> a # show args of func call
>>>
>>> w # full stack of current position
>>>
>>> b _#_ # set breakpt at line _#_
>>>

# # %timeit, %time
# # diffs: http://stackoverflow.com/questions/8619167/inconsistency-between-time-and-timeit-in-ipython
# # %time : runs statement once, reporting excution time
# # %timeit: temporarily turns off garbage collection during timing (default),
# #          run number of times (default n=1,000,000)
# #          ** more accurate b/c of numerous runs
# #
# # Wall time: start-to-completion task time
# #
